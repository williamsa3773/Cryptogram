var helpers = require("../util/helpers")

module.exports = function(req, next){
  if (req.argv.help || req.argv.h) {
    helpers
      .log()
      .log("  " + req.configuration.platform.replace(/^\w/, c => c.toUpperCase()).underline.blue, ("âš¡ " + req.pkg.description).brightYellow, req.pkg.version.grey)
      .log()
      .log("  "+ req.configuration.name +"                             "+"(opt --preview)".grey+"  publish with prompts".grey)
      .log("  "+ req.configuration.name +" <path>   <domain>           "+"(opt --preview)".grey+"  publish without prompts (recommended)".grey)
      .log("  "+ req.configuration.name +" encrypt  <domain>                            "+"provision SSL cert for project".grey)
      .log("  "+ req.configuration.name +" certs    <domain>                            "+"view certs for project".grey)
      .log("  "+ req.configuration.name +" config   <domain>                            "+"view/change project configuration".grey)
      .log("  "+ req.configuration.name +" list     <domain>                            "+"list all project revisions".grey)
      .log("  "+ req.configuration.name +" rollfore <domain>                            "+"change to next revision".grey)
      .log("  "+ req.configuration.name +" rollback <domain>                            "+"change to previous revision".grey)
      .log("  "+ req.configuration.name +" cutover  <domain>                            "+"change to latest revision".grey)
      .log("  "+ req.configuration.name +" discard  <revision>                          "+"remove revision from system".grey)
      .log("  "+ req.configuration.name +" files    <domain>                            "+"list all project files".grey)
      .log("  "+ req.configuration.name +" audit    <domain>                            "+"audit edgenode state".grey)
      .log("  "+ req.configuration.name +" bust     <domain>                            "+"busts cache on all edgenodes".grey)
      .log("  "+ req.configuration.name +" traffic  <domain>                            "+"analytics showing project traffic".grey)
      .log("  "+ req.configuration.name +" load     <domain>                            "+"analytics showing global network load".grey)
      .log("  "+ req.configuration.name +" audience <domain>                            "+"analytics showing audience device info".grey)
      .log("  "+ req.configuration.name +" usage    <domain>                            "+"analytics showing bandwidth usage".grey)
      .log("  "+ req.configuration.name +" teardown <domain>                            "+"tear down a published project".grey)
      .log("  "+ req.configuration.name +" ssl      <domain> <pempath>                  "+"legacy command for uploding .pem file".grey)
      .log("  "+ req.configuration.name +" invite   <domain> <emails>                   "+"invites user to be a contributor".grey)
      .log("  "+ req.configuration.name +" revoke   <domain> <emails>                   "+"revokes contributor rights".grey)
      .log("  "+ req.configuration.name +" dns|zone <domain>                            "+"view DNS records".grey)
      .log("  "+ req.configuration.name +" dns|zone <domain> add <type> <name> <value>  "+"add DNS record".grey)
      .log("  "+ req.configuration.name +" dns|zone <domain> rem <id>                   "+"remove DNS record".grey)
      .log("  "+ req.configuration.name +" whoami                                       "+"show who you are logged in as".grey)
      .log("  "+ req.configuration.name +" login                                        "+"only performs authentication step".grey)
      .log("  "+ req.configuration.name +" logout                                       "+"expire local token".grey)
      .log("  "+ req.configuration.name +" token                                        "+"create token for automation purposes".grey)
      .log("  "+ req.configuration.name +" plan                                         "+"upgrade or downgrade account plan".grey)
      .log("  "+ req.configuration.name +" nuke                                         "+"permanently removes account".grey)
      .log("  "+ req.configuration.name +" list                                         "+"list all projects".grey)
      .log("  "+ req.configuration.name +" --version                                    "+"outputs version".grey)
      .log("  "+ req.configuration.name +" --help                                       "+"outputs this help message".grey)
      .log()
  } else {
    next()
  }
}
